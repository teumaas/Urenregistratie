@model CCO_Urenregistratie.Models.ResetPasswordViewModel
@{
    ViewBag.Title = "Wachtwoord wijzigen";
}

@using (Html.BeginForm("ResetPassword", "Account", FormMethod.Post, new { role = "form" }))
{

    @Html.AntiForgeryToken()
    @Html.ValidationSummary("", new { @class = "text-danger" })
    @Html.HiddenFor(model => model.Code)

    <div class="row">
        <div class="col-sm-24">
            <div class="col-sm-offset-2 col-sm-8 box animated zoomInRight">
                <div class="panel panel-cco">
                    <div class="panel-heading">
                        <h3 class="panel-title">Urenregistratie - Wachtwoord wijzigen</h3>
                    </div>

                    <div class="panel-body">
                        <div class="col-sm-12">
                            <div class="center-block logo-big"></div>
                        </div>

                        <div class="col-sm-12">
                            @Html.ValidationSummary(true, "", new { @class = "text-danger" })
                            <div class="form-group">
                                <div class="input-group">
                                    <span class="info-cco input-group-addon"><i class="fa fa-user"></i></span>
                                    @Html.TextBoxFor(m => m.Email, new { @class = " form-cco form-control ", @placeholder = Html.DisplayNameFor(m => m.Email) })
                                    @Html.ValidationMessageFor(m => m.Email, "", new { @class = "text-danger"})
                                </div>
                            </div>

                            <div class="form-group">
                                <div class="input-group">
                                    <span class="info-cco input-group-addon"><i class="fa fa-lock"></i></span>
                                    @Html.PasswordFor(m => m.Password, new { @class = "form-control form-cco", @placeholder = Html.DisplayNameFor(m => m.Password)})
                                    @Html.ValidationMessageFor(m => m.Password, "", new { @class = "text-danger"})
                                </div>
                            </div>


                            <div class="form-group">
                                <div class="input-group">
                                    <span class="info-cco input-group-addon"><i class="fa fa-lock"></i></span>
                                    @Html.PasswordFor(m => m.ConfirmPassword, new { @class = "form-control form-cco", @placeholder = Html.DisplayNameFor(m => m.ConfirmPassword) })
                                    @Html.ValidationMessageFor(m => m.ConfirmPassword, "", new { @class = "text-danger" })
                                </div>
                            </div>
                        </div>

                        <button type="submit" id="submit" name="submit" class="btn btn-cco">
                            <span class="fa fa-sign-in"></span>
                            Registreren
                        </button>
                    </div>
                </div>
            </div>
        </div>
   </div>
}

@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
}
